{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yarden\\\\Desktop\\\\projects\\\\programming\\\\react-roll-dice\\\\src\\\\Pages\\\\EnterGame\\\\EnterGame.jsx\";\nimport React from 'react';\nimport DiceGame from '../DiceGame/DiceGame';\nimport TextInputs from '../../Components/TextInputs/TextInputs';\nimport Buttons from '../../Components/Buttons/Buttons';\nimport \"./EnterGame.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class EnterGame extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      maxPoints: sessionStorage.getItem('maxPoints'),\n      name0: sessionStorage.getItem('name0') || 'Player 1',\n      name1: sessionStorage.getItem('name1') || 'Player 2',\n      startGame: false\n    };\n  }\n\n  renderNameInputs() {\n    const arrOfInputComponents = [];\n    sessionStorage.getItem('name0') || sessionStorage.setItem('name0', \"Player 1\");\n    sessionStorage.getItem('name1') || sessionStorage.setItem('name1', \"Player 2\");\n    sessionStorage.getItem('maxPoints') || sessionStorage.setItem('maxPoints', 100);\n\n    for (let i = 0; i < 2; i++) {\n      arrOfInputComponents[i] = /*#__PURE__*/_jsxDEV(TextInputs, {\n        type: \"text\",\n        id: `name${i}`,\n        value: this.state[`name${i}`],\n        callBack: this.saveToStorage,\n        text: `Player ${i + 1} Name:`\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 33\n      }, this);\n    }\n\n    return arrOfInputComponents;\n  }\n\n  saveToStorage(event) {\n    const {\n      id,\n      value\n    } = event.target;\n    sessionStorage.setItem(id, value);\n    this.setState(pervState => {\n      return { ...pervState,\n        [id]: value\n      };\n    });\n  }\n\n  handelStartClick() {\n    this.setState(pervState => {\n      return { ...pervState,\n        startGame: true\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: this.state.startGame ? /*#__PURE__*/_jsxDEV(DiceGame, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-container-opening\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-opening\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"opening-img display-desktop\",\n            src: \"/assets/images/cubes.JPG\",\n            alt: \"cubes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"ROll DICE GAME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"instructions: You need to get to the Points Target first to win. Try to avoid Doubles.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: this.renderNameInputs()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextInputs, {\n              type: \"number\",\n              id: \"maxPoints\",\n              callBack: () => this.saveToStorage(),\n              text: \"Target Points:\",\n              value: this.state.maxPoints\n            }, \"3\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n              id: \"startGame\",\n              text: \"START GAME\",\n              callback: () => this.handelStartClick()\n            }, \"startGame\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/yarden/Desktop/projects/programming/react-roll-dice/src/Pages/EnterGame/EnterGame.jsx"],"names":["React","DiceGame","TextInputs","Buttons","EnterGame","Component","state","maxPoints","sessionStorage","getItem","name0","name1","startGame","renderNameInputs","arrOfInputComponents","setItem","i","saveToStorage","event","id","value","target","setState","pervState","handelStartClick","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport DiceGame from '../DiceGame/DiceGame';\r\nimport TextInputs from '../../Components/TextInputs/TextInputs';\r\nimport Buttons from '../../Components/Buttons/Buttons';\r\nimport \"./EnterGame.scss\"\r\n\r\nexport default class EnterGame extends React.Component {\r\n\r\n  state = {\r\n    maxPoints: sessionStorage.getItem('maxPoints'), name0: sessionStorage.getItem('name0') || 'Player 1', name1: sessionStorage.getItem('name1') || 'Player 2', startGame: false\r\n  }\r\n\r\n\r\n  renderNameInputs() {\r\n    const arrOfInputComponents = [];\r\n    sessionStorage.getItem('name0') || sessionStorage.setItem('name0', \"Player 1\")\r\n    sessionStorage.getItem('name1') || sessionStorage.setItem('name1', \"Player 2\")\r\n    sessionStorage.getItem('maxPoints') || sessionStorage.setItem('maxPoints', 100)\r\n    for (let i = 0; i < 2; i++) {\r\n      arrOfInputComponents[i] = <TextInputs type=\"text\" key={i} id={`name${i}`} value={this.state[`name${i}`]} callBack={this.saveToStorage} text={`Player ${i + 1} Name:`} />\r\n    }\r\n    return arrOfInputComponents;\r\n  }\r\n\r\n  saveToStorage(event) {\r\n    const { id, value } = event.target;\r\n    sessionStorage.setItem(id, value);\r\n    this.setState((pervState) => {\r\n      return { ...pervState, [id]: value };\r\n    });\r\n  }\r\n\r\n  handelStartClick() {\r\n    this.setState((pervState) => {\r\n      return { ...pervState, startGame: true };\r\n    });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.startGame ? <DiceGame /> :\r\n          <div className=\"main-container-opening\">\r\n            <div className=\"container-opening\">\r\n              <img className=\"opening-img display-desktop\" src=\"/assets/images/cubes.JPG\" alt=\"cubes\" />\r\n              <div className=\"container-text\">\r\n                <h2>ROll DICE GAME</h2>\r\n                <p>instructions: You need to get to the Points Target first to win. Try to avoid Doubles.</p>\r\n                <div>\r\n                  {this.renderNameInputs()}\r\n                </div>\r\n                <TextInputs key=\"3\" type=\"number\" id=\"maxPoints\" callBack={() => this.saveToStorage()} text=\"Target Points:\" value={this.state.maxPoints} />\r\n                <Buttons id=\"startGame\" key=\"startGame\" text=\"START GAME\" callback={() => this.handelStartClick()} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        }\r\n      </>\r\n\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}