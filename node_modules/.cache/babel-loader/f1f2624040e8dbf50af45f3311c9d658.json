{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yarden\\\\Desktop\\\\projects\\\\programming\\\\react-roll-dice\\\\src\\\\Pages\\\\DiceGame\\\\DiceGame.jsx\";\nimport React, { Component } from \"react\";\nimport \"./dicegame.scss\";\nimport NewGameButton from \"../../Components/NewGameButton/NewGameButton\";\nimport HoldAndDiceButtons from \"../../Components/HoldAndDiceButtons/HoldAndDiceButtons\";\nimport Player from \"../../Components/player/Player\";\nimport Dice from \"../../Components/Dice/Dice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DiceGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pointsToWin: 0,\n      gameOver: false,\n      playersTurn: 0,\n      players: [{\n        name: \"\",\n        totalScore: 0,\n        tempScore: 0\n      }, {\n        name: \"\",\n        totalScore: 0,\n        tempScore: 0\n      }]\n    };\n    this.handelDices = this.handelDices.bind(this);\n    this.handelHold = this.handelHold.bind(this);\n    this.dicesArr = [\"\", \"\"];\n  }\n\n  handelDices() {\n    for (let i = 0; i < this.dicesArr.length; i++) {\n      this.dicesArr[i] = Math.floor(Math.random() * 6) + 1;\n    }\n\n    console.log(this.dicesArr);\n\n    if (this.dicesArr[0] === 6 && this.dicesArr[1] === 6) {\n      this.resetCurrentPlayerValues();\n      this.ChangeTurn();\n    } else {\n      this.totalScorePlayer(this.tempScorePlayer());\n    }\n  }\n\n  renderDices() {\n    return this.dicesArr.map((dice, i) => {\n      if (dice !== \"\") {\n        return /*#__PURE__*/_jsxDEV(Dice, {\n          value: dice\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this);\n      }\n    });\n  }\n\n  ChangeTurn() {\n    console.log(this.state.playersTurn);\n    this.setState(pervState => {\n      return pervState.playersTurn = 1 - pervState.playersTurn;\n    });\n  }\n\n  totalScorePlayer(tempScorePlayer) {\n    this.setState(pervState => {\n      return pervState.players[this.state.playersTurn].totalScore += tempScorePlayer;\n    });\n  }\n\n  tempScorePlayer() {\n    const tempScore = this.dicesArr.reduce((a, b) => a + b, 0);\n    this.setState(pervState => {\n      return pervState.players[this.state.playersTurn].tempScore = tempScore;\n    });\n    return tempScore;\n  }\n\n  resetCurrentPlayerValues() {\n    this.setState(pervState => {\n      return pervState.players[this.state.playersTurn].totalScore = 0;\n    });\n    this.setState(pervState => {\n      return pervState.players[this.state.playersTurn].tempScore = 0;\n    });\n  }\n\n  handelHold() {\n    this.state.players.forEach(player => {\n      if (player.totalScore >= this.state.pointsToWin) {\n        this.winningMessage(player);\n        return;\n      }\n    });\n    this.ChangeTurn();\n  }\n\n  winningMessage() {\n    this.state.players.forEach(player => {\n      if (player.totalScore >= this.state.pointsToWin) {\n        console.log(player.name);\n        return;\n      }\n    });\n  }\n\n  resetGame() {\n    this.setState(pervState => {\n      for (let i = 0; i < this.state.players; i++) {\n        return pervState.players[i].totalScore = 0;\n      }\n    });\n    this.setState(pervState => {\n      for (let i = 0; i < this.state.players; i++) {\n        return pervState.players[i].tempScore = 0;\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(Player, {\n        id: 0,\n        totalScore: this.state.players[0].totalScore,\n        playerTurn: this.state.playersTurn,\n        tempScore: this.state.players[0].tempScore,\n        playerName: sessionStorage.getItem('name0')\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns-container\",\n        children: [/*#__PURE__*/_jsxDEV(NewGameButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), this.renderDices(), /*#__PURE__*/_jsxDEV(HoldAndDiceButtons, {\n          callback: this.handelDices,\n          text: \"ROLL DICE\"\n        }, 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HoldAndDiceButtons, {\n          callback: this.handelHold,\n          text: \"HOLD\"\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Player, {\n        id: 1,\n        totalScore: this.state.players[1].totalScore,\n        playerTurn: this.state.playersTurn,\n        tempScore: this.state.players[1].tempScore,\n        playerName: sessionStorage.getItem('name1')\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/yarden/Desktop/projects/programming/react-roll-dice/src/Pages/DiceGame/DiceGame.jsx"],"names":["React","Component","NewGameButton","HoldAndDiceButtons","Player","Dice","DiceGame","constructor","props","state","pointsToWin","gameOver","playersTurn","players","name","totalScore","tempScore","handelDices","bind","handelHold","dicesArr","i","length","Math","floor","random","console","log","resetCurrentPlayerValues","ChangeTurn","totalScorePlayer","tempScorePlayer","renderDices","map","dice","setState","pervState","reduce","a","b","forEach","player","winningMessage","resetGame","render","sessionStorage","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./dicegame.scss\";\r\nimport NewGameButton from \"../../Components/NewGameButton/NewGameButton\";\r\nimport HoldAndDiceButtons from \"../../Components/HoldAndDiceButtons/HoldAndDiceButtons\";\r\nimport Player from \"../../Components/player/Player\";\r\nimport Dice from \"../../Components/Dice/Dice\";\r\n\r\n\r\nexport default class DiceGame extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pointsToWin: 0,\r\n      gameOver: false,\r\n      playersTurn: 0,\r\n      players: [\r\n        {\r\n          name: \"\",\r\n          totalScore: 0,\r\n          tempScore: 0,\r\n        },\r\n        {\r\n          name: \"\",\r\n          totalScore: 0,\r\n          tempScore: 0,\r\n        },\r\n      ],\r\n    }\r\n    this.handelDices = this.handelDices.bind(this);\r\n    this.handelHold = this.handelHold.bind(this);\r\n    this.dicesArr = [\"\", \"\"];\r\n  }\r\n\r\n  handelDices() {\r\n    for (let i = 0; i < this.dicesArr.length; i++) {\r\n      this.dicesArr[i] = Math.floor(Math.random() * 6) + 1;\r\n    }\r\n    console.log(this.dicesArr);\r\n    if (this.dicesArr[0] === 6 && this.dicesArr[1] === 6) {\r\n      this.resetCurrentPlayerValues();\r\n      this.ChangeTurn();\r\n    } else {\r\n      this.totalScorePlayer(this.tempScorePlayer());\r\n    }\r\n  }\r\n\r\n  renderDices() {\r\n    return this.dicesArr.map((dice, i) => {\r\n      if (dice !== \"\") {\r\n        return <Dice key={i} value={dice} />\r\n      }\r\n    })\r\n  }\r\n\r\n  ChangeTurn() {\r\n    console.log(this.state.playersTurn);\r\n    this.setState((pervState) => {\r\n      return pervState.playersTurn = 1 - pervState.playersTurn;\r\n    });\r\n  }\r\n\r\n  totalScorePlayer(tempScorePlayer) {\r\n    this.setState((pervState) => {\r\n      return pervState.players[this.state.playersTurn].totalScore += tempScorePlayer;\r\n    });\r\n  }\r\n\r\n  tempScorePlayer() {\r\n    const tempScore = this.dicesArr.reduce((a, b) => a + b, 0);\r\n    this.setState((pervState) => {\r\n      return pervState.players[this.state.playersTurn].tempScore = tempScore;\r\n    });\r\n    return tempScore;\r\n  }\r\n\r\n  resetCurrentPlayerValues() {\r\n    this.setState((pervState) => {\r\n      return pervState.players[this.state.playersTurn].totalScore = 0;\r\n    });\r\n    this.setState((pervState) => {\r\n      return pervState.players[this.state.playersTurn].tempScore = 0;\r\n    });\r\n  }\r\n\r\n  handelHold() {\r\n    this.state.players.forEach((player) => {\r\n      if (player.totalScore >= this.state.pointsToWin) {\r\n        this.winningMessage(player);\r\n        return;\r\n      }\r\n    })\r\n    this.ChangeTurn();\r\n  }\r\n\r\n  winningMessage() {\r\n    this.state.players.forEach((player) => {\r\n      if (player.totalScore >= this.state.pointsToWin) {\r\n        console.log(player.name);\r\n        return;\r\n      }\r\n    })\r\n  }\r\n\r\n  resetGame() {\r\n    this.setState((pervState) => {\r\n      for (let i = 0; i < this.state.players; i++) {\r\n        return pervState.players[i].totalScore = 0;\r\n      }\r\n    });\r\n    this.setState((pervState) => {\r\n      for (let i = 0; i < this.state.players; i++) {\r\n        return pervState.players[i].tempScore = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <Player key={0} id={0} totalScore={this.state.players[0].totalScore} playerTurn={this.state.playersTurn} tempScore={this.state.players[0].tempScore} playerName={sessionStorage.getItem('name0')} />\r\n        <div className=\"columns-container\">\r\n          <NewGameButton />\r\n          {this.renderDices()}\r\n          <HoldAndDiceButtons key={0} callback={this.handelDices} text=\"ROLL DICE\" />\r\n          <HoldAndDiceButtons key={1} callback={this.handelHold} text=\"HOLD\" />\r\n        </div>\r\n        <Player key={1} id={1} totalScore={this.state.players[1].totalScore} playerTurn={this.state.playersTurn} tempScore={this.state.players[1].tempScore} playerName={sessionStorage.getItem('name1')} />\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}