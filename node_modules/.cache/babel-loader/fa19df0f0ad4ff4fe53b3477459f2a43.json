{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yarden\\\\Desktop\\\\projects\\\\programming\\\\react-roll-dice\\\\src\\\\Pages\\\\DiceGame.jsx\";\nimport React, { Component } from \"react\";\nimport \"./dicegame.scss\";\nimport NewGameButton from \"../Components/NewGameButton/NewGameButton\";\nimport HoldAndDiceButtons from \"../Components/HoldAndDiceButtons/HoldAndDiceButtons\";\nimport TopPointsInput from \"../Components/TopPointsInput/TopPointsInput\";\nimport Player from \"../Components/player/Player\";\nimport Dice from \"../Components/Dice/Dice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DiceGame extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pointsToWin: 100,\n      dices: [null, null],\n      gameOver: false,\n      playersTurn: 0,\n      players: [{\n        totalScore: 0,\n        tempScore: 0\n      }, {\n        totalScore: 0,\n        tempScore: 0\n      }]\n    };\n    this.handelDices = this.handelDices.bind(this);\n  }\n\n  handelDices() {\n    const dicesArr = [];\n\n    for (let i = 0; i < 2; i++) {\n      dicesArr[i] = Math.floor(Math.random() * 6) + 1;\n      this.setState(pervState => {\n        return pervState.dices[i] = Math.floor(Math.random() * 6) + 1;\n      });\n    } // this.setState({ dices: this.state.dices });\n\n\n    if (dicesArr === 6 && dicesArr === 6) {\n      this.ChangeTurn();\n    }\n\n    this.totalScorePlayer(this.tempScorePlayer());\n  }\n\n  renderDices() {\n    return this.state.dices.map((dice, i) => {\n      return /*#__PURE__*/_jsxDEV(Dice, {\n        value: dice\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  ChangeTurn() {\n    console.log(this.state.playersTurn);\n    this.setState(pervState => {\n      return pervState.playersTurn = 1 - pervState.playersTurn;\n    });\n  }\n\n  totalScorePlayer(tempScorePlayer) {\n    this.setState(pervState => {\n      return pervState.players[0].totalScore += tempScorePlayer;\n    });\n    console.log(this.state.players[0].totalScore);\n  }\n\n  tempScorePlayer() {\n    return this.state.dices.reduce((a, b) => a + b, 0);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(Player, {\n        id: \"1\",\n        totalScore: this.state.players[0].totalScore\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Columns-container\",\n        children: [/*#__PURE__*/_jsxDEV(NewGameButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), this.renderDices(), /*#__PURE__*/_jsxDEV(HoldAndDiceButtons, {\n          callback: this.handelDices,\n          text: \"ROLL DICE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HoldAndDiceButtons, {\n          callback: this.handelDices,\n          text: \"HOLD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TopPointsInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Player, {\n        id: \"2\",\n        totalScore: this.state.players[1].totalScore\n      }, \"2\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/yarden/Desktop/projects/programming/react-roll-dice/src/Pages/DiceGame.jsx"],"names":["React","Component","NewGameButton","HoldAndDiceButtons","TopPointsInput","Player","Dice","DiceGame","constructor","state","pointsToWin","dices","gameOver","playersTurn","players","totalScore","tempScore","handelDices","bind","dicesArr","i","Math","floor","random","setState","pervState","ChangeTurn","totalScorePlayer","tempScorePlayer","renderDices","map","dice","console","log","reduce","a","b","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./dicegame.scss\";\r\nimport NewGameButton from \"../Components/NewGameButton/NewGameButton\";\r\nimport HoldAndDiceButtons from \"../Components/HoldAndDiceButtons/HoldAndDiceButtons\";\r\nimport TopPointsInput from \"../Components/TopPointsInput/TopPointsInput\";\r\nimport Player from \"../Components/player/Player\";\r\nimport Dice from \"../Components/Dice/Dice\";\r\n\r\n\r\nexport default class DiceGame extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      pointsToWin: 100,\r\n      dices: [null, null],\r\n      gameOver: false,\r\n      playersTurn: 0,\r\n      players: [\r\n        {\r\n          totalScore: 0,\r\n          tempScore: 0,\r\n        },\r\n        {\r\n          totalScore: 0,\r\n          tempScore: 0,\r\n        },\r\n      ]\r\n    }\r\n    this.handelDices = this.handelDices.bind(this);\r\n  }\r\n\r\n  handelDices() {\r\n    const dicesArr = [];\r\n    for (let i = 0; i < 2; i++) {\r\n      dicesArr[i] = Math.floor(Math.random() * 6) + 1;\r\n      this.setState((pervState) => {\r\n        return pervState.dices[i] = Math.floor(Math.random() * 6) + 1;\r\n      })\r\n    }\r\n    // this.setState({ dices: this.state.dices });\r\n    if (dicesArr === 6 && dicesArr === 6) {\r\n      this.ChangeTurn();\r\n    }\r\n    this.totalScorePlayer(this.tempScorePlayer());\r\n  }\r\n\r\n  renderDices() {\r\n    return this.state.dices.map((dice, i) => {\r\n      return <Dice key={i} value={dice} />\r\n    })\r\n  }\r\n\r\n  ChangeTurn() {\r\n    console.log(this.state.playersTurn);\r\n    this.setState((pervState) => {\r\n      return pervState.playersTurn = 1 - pervState.playersTurn;\r\n    });\r\n  }\r\n\r\n  totalScorePlayer(tempScorePlayer) {\r\n    this.setState((pervState) => {\r\n      return pervState.players[0].totalScore += tempScorePlayer;\r\n    });\r\n    console.log(this.state.players[0].totalScore)\r\n  }\r\n\r\n  tempScorePlayer() {\r\n    return this.state.dices.reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <Player key=\"1\" id=\"1\" totalScore={this.state.players[0].totalScore} />\r\n        <div className=\"Columns-container\">\r\n          <NewGameButton />\r\n          {this.renderDices()}\r\n          <HoldAndDiceButtons callback={this.handelDices} text=\"ROLL DICE\" />\r\n          <HoldAndDiceButtons callback={this.handelDices} text=\"HOLD\" />\r\n          <TopPointsInput />\r\n        </div>\r\n        <Player key=\"2\" id=\"2\" totalScore={this.state.players[1].totalScore} />\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}