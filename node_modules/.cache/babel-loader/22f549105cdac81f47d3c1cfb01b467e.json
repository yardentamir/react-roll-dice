{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yarden\\\\Desktop\\\\projects\\\\programming\\\\react-roll-dice\\\\src\\\\Pages\\\\DiceGame\\\\DiceGame.jsx\";\nimport React, { Component } from \"react\";\nimport \"./dicegame.scss\";\nimport Buttons from \"../../Components/Buttons/Buttons\";\nimport Player from \"../../Components/player/Player\";\nimport Dice from \"../../Components/Dice/Dice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DiceGame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameOver: false,\n      playersTurn: 0,\n      players: [{\n        totalScore: 0,\n        tempScore: 0\n      }, {\n        totalScore: 0,\n        tempScore: 0\n      }]\n    };\n    this.handelDices = this.handelDices.bind(this);\n    this.handelHold = this.handelHold.bind(this);\n    this.dicesArr = [\"\", \"\"];\n  }\n\n  handelDices() {\n    for (let i = 0; i < this.dicesArr.length; i++) {\n      this.dicesArr[i] = Math.floor(Math.random() * 6) + 1;\n    }\n\n    console.log(this.dicesArr);\n\n    if (this.dicesArr[0] === 6 && this.dicesArr[1] === 6) {\n      this.resetCurrentPlayerValues();\n      this.ChangeTurn();\n    } else {\n      this.totalScorePlayer(this.tempScorePlayer());\n    }\n  }\n\n  renderDices() {\n    return this.dicesArr.map((dice, i) => {\n      if (dice !== \"\") {\n        return /*#__PURE__*/_jsxDEV(Dice, {\n          value: dice\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this);\n      }\n\n      return \"\";\n    });\n  }\n\n  ChangeTurn() {\n    console.log(this.state.playersTurn);\n    this.setState(pervState => {\n      return pervState.playersTurn = 1 - pervState.playersTurn;\n    });\n  }\n\n  totalScorePlayer(tempScorePlayer) {\n    this.setState(pervState => {\n      return pervState.players[this.state.playersTurn].totalScore += tempScorePlayer;\n    });\n  }\n\n  tempScorePlayer() {\n    const tempScore = this.dicesArr.reduce((a, b) => a + b, 0);\n    this.setState(pervState => {\n      return pervState.players[this.state.playersTurn].tempScore = tempScore;\n    });\n    return tempScore;\n  }\n\n  resetCurrentPlayerValues() {\n    this.setState(pervState => {\n      return pervState.players[this.state.playersTurn].totalScore = 0;\n    });\n    this.setState(pervState => {\n      return pervState.players[this.state.playersTurn].tempScore = 0;\n    });\n  }\n\n  handelHold() {\n    this.state.players.forEach((player, index) => {\n      if (player.totalScore >= sessionStorage.getItem(\"maxPoints\")) {\n        this.winningMessage(index);\n        return;\n      }\n    });\n    this.ChangeTurn();\n  }\n\n  winningMessage(winnerId) {\n    //\n    console.log(sessionStorage.getItem(`name${winnerId}`));\n  }\n\n  resetGame() {\n    this.setState(pervState => {\n      for (let i = 0; i < this.state.players; i++) {\n        return pervState.players[i].totalScore = 0;\n      }\n    });\n    this.setState(pervState => {\n      for (let i = 0; i < this.state.players; i++) {\n        return pervState.players[i].tempScore = 0;\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [/*#__PURE__*/_jsxDEV(Player, {\n        id: 0,\n        className: \"player-div\",\n        totalScore: this.state.players[0].totalScore,\n        playerTurn: this.state.playersTurn,\n        tempScore: this.state.players[0].tempScore,\n        playerName: sessionStorage.getItem('name0')\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columns-container\",\n        children: [/*#__PURE__*/_jsxDEV(Buttons, {\n          text: \"NEW GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), this.renderDices(), /*#__PURE__*/_jsxDEV(Buttons, {\n          callback: this.handelDices,\n          text: \"ROLL DICE\"\n        }, 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n          callback: this.handelHold,\n          text: \"HOLD\"\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Player, {\n        id: 1,\n        className: \"player-div\",\n        totalScore: this.state.players[1].totalScore,\n        playerTurn: this.state.playersTurn,\n        tempScore: this.state.players[1].tempScore,\n        playerName: sessionStorage.getItem('name1')\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/yarden/Desktop/projects/programming/react-roll-dice/src/Pages/DiceGame/DiceGame.jsx"],"names":["React","Component","Buttons","Player","Dice","DiceGame","constructor","props","state","gameOver","playersTurn","players","totalScore","tempScore","handelDices","bind","handelHold","dicesArr","i","length","Math","floor","random","console","log","resetCurrentPlayerValues","ChangeTurn","totalScorePlayer","tempScorePlayer","renderDices","map","dice","setState","pervState","reduce","a","b","forEach","player","index","sessionStorage","getItem","winningMessage","winnerId","resetGame","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./dicegame.scss\";\r\nimport Buttons from \"../../Components/Buttons/Buttons\";\r\nimport Player from \"../../Components/player/Player\";\r\nimport Dice from \"../../Components/Dice/Dice\";\r\n\r\n\r\nexport default class DiceGame extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gameOver: false,\r\n      playersTurn: 0,\r\n      players: [\r\n        {\r\n          totalScore: 0,\r\n          tempScore: 0,\r\n        },\r\n        {\r\n          totalScore: 0,\r\n          tempScore: 0,\r\n        },\r\n      ],\r\n    }\r\n    this.handelDices = this.handelDices.bind(this);\r\n    this.handelHold = this.handelHold.bind(this);\r\n    this.dicesArr = [\"\", \"\"];\r\n  }\r\n\r\n  handelDices() {\r\n    for (let i = 0; i < this.dicesArr.length; i++) {\r\n      this.dicesArr[i] = Math.floor(Math.random() * 6) + 1;\r\n    }\r\n    console.log(this.dicesArr);\r\n    if (this.dicesArr[0] === 6 && this.dicesArr[1] === 6) {\r\n      this.resetCurrentPlayerValues();\r\n      this.ChangeTurn();\r\n    } else {\r\n      this.totalScorePlayer(this.tempScorePlayer());\r\n    }\r\n  }\r\n\r\n  renderDices() {\r\n    return this.dicesArr.map((dice, i) => {\r\n      if (dice !== \"\") {\r\n        return <Dice key={i} value={dice} />\r\n      }\r\n      return \"\";\r\n    })\r\n  }\r\n\r\n  ChangeTurn() {\r\n    console.log(this.state.playersTurn);\r\n    this.setState((pervState) => {\r\n      return pervState.playersTurn = 1 - pervState.playersTurn;\r\n    });\r\n  }\r\n\r\n  totalScorePlayer(tempScorePlayer) {\r\n    this.setState((pervState) => {\r\n      return pervState.players[this.state.playersTurn].totalScore += tempScorePlayer;\r\n    });\r\n  }\r\n\r\n  tempScorePlayer() {\r\n    const tempScore = this.dicesArr.reduce((a, b) => a + b, 0);\r\n    this.setState((pervState) => {\r\n      return pervState.players[this.state.playersTurn].tempScore = tempScore;\r\n    });\r\n    return tempScore;\r\n  }\r\n\r\n  resetCurrentPlayerValues() {\r\n    this.setState((pervState) => {\r\n      return pervState.players[this.state.playersTurn].totalScore = 0;\r\n    });\r\n    this.setState((pervState) => {\r\n      return pervState.players[this.state.playersTurn].tempScore = 0;\r\n    });\r\n  }\r\n\r\n  handelHold() {\r\n    this.state.players.forEach((player, index) => {\r\n      if (player.totalScore >= sessionStorage.getItem(\"maxPoints\")) {\r\n        this.winningMessage(index);\r\n        return;\r\n      }\r\n    })\r\n    this.ChangeTurn();\r\n  }\r\n\r\n  winningMessage(winnerId) {\r\n    //\r\n\r\n    console.log(sessionStorage.getItem(`name${winnerId}`));\r\n  }\r\n\r\n  resetGame() {\r\n    this.setState((pervState) => {\r\n      for (let i = 0; i < this.state.players; i++) {\r\n        return pervState.players[i].totalScore = 0;\r\n      }\r\n    });\r\n    this.setState((pervState) => {\r\n      for (let i = 0; i < this.state.players; i++) {\r\n        return pervState.players[i].tempScore = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-container\">\r\n        <Player key={0} id={0} className=\"player-div\" totalScore={this.state.players[0].totalScore} playerTurn={this.state.playersTurn} tempScore={this.state.players[0].tempScore} playerName={sessionStorage.getItem('name0')} />\r\n        <div className=\"columns-container\">\r\n          <Buttons text=\"NEW GAME\" />\r\n          {this.renderDices()}\r\n          <Buttons key={0} callback={this.handelDices} text=\"ROLL DICE\" />\r\n          <Buttons key={1} callback={this.handelHold} text=\"HOLD\" />\r\n        </div>\r\n        <Player key={1} id={1} className=\"player-div\" totalScore={this.state.players[1].totalScore} playerTurn={this.state.playersTurn} tempScore={this.state.players[1].tempScore} playerName={sessionStorage.getItem('name1')} />\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}